{"name":"firenze-adapter-redis","tagline":"Redis adapter for firenze.js ORM","body":"# firenze-adapter-redis\r\n\r\n[![Build Status](https://secure.travis-ci.org/fahad19/firenze-adapter-redis.png?branch=master)](http://travis-ci.org/fahad19/firenze-adapter-redis) [![Coverage Status](https://coveralls.io/repos/fahad19/firenze-adapter-redis/badge.svg?branch=master)](https://coveralls.io/r/fahad19/firenze-adapter-redis?branch=master) [![npm](https://img.shields.io/npm/v/firenze-adapter-redis.svg)](https://www.npmjs.com/package/firenze-adapter-redis) [![Join the chat at https://gitter.im/fahad19/firenze](https://img.shields.io/badge/gitter-join_chat_%E2%86%92-1dce73.svg)](https://gitter.im/fahad19/firenze)\r\n\r\nRedis database adapter for [firenze.js](https://github.com/fahad19/firenze)\r\n\r\nInstall it with [npm](https://npmjs.com):\r\n\r\n```\r\n$ npm install --save firenze-adapter-redis\r\n```\r\n\r\nThe adapter currently supports only setting/getting/deleting a particular key at this moment.\r\n\r\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\r\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\r\n# Contents\r\n\r\n  - [Usage](#usage)\r\n  - [Operations](#operations)\r\n    - [Creating](#creating)\r\n    - [Reading](#reading)\r\n    - [Updating](#updating)\r\n    - [Deleting](#deleting)\r\n  - [Testing](#testing)\r\n  - [License](#license)\r\n\r\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\r\n\r\n<!--docume:src/index.js-->\r\n## Usage\r\n\r\n```js\r\nvar f = require('firenze');\r\nvar Database = f.Database;\r\nvar RedisAdapter = require('firenze-adapter-redis');\r\n\r\nvar db = new Database({\r\n  adapter: RedisAdapter,\r\n\r\n  // optional config\r\n  port: 6379,\r\n  host: '127.0.0.1'\r\n  options: {} // passed to `redis.createClient(port, host, options)`\r\n});\r\n```\r\n\r\n## Operations\r\n\r\nExamples below assume you have an instance of a Post model already:\r\n\r\n```js\r\nvar Post = db.createModelClass({\r\n  primaryKey: 'key',\r\n  displayField: 'value'\r\n});\r\n```\r\n\r\n### Creating\r\n\r\n```js\r\nvar post = new Post({\r\n  key: 'myUniqueKey',\r\n  value: 'some value here...'\r\n});\r\n\r\npost.save().then(function (model) {\r\n  var value = model.get('value'); // some value here...\r\n});\r\n```\r\n\r\n### Reading\r\n\r\n```js\r\nvar post = new Post({\r\n  key: 'myUniqueKey'\r\n});\r\n\r\npost.fetch().then(function (model) {\r\n  var value = model.get('value');\r\n});\r\n```\r\n\r\n### Updating\r\n\r\n```js\r\nvar post = new Post({\r\n  key: 'myUniqueKey'\r\n});\r\n\r\npost.set('value', 'some new value...');\r\n\r\npost.save().then(function (model) {\r\n  var value = model.get('value');\r\n});\r\n```\r\n\r\n### Deleting\r\n\r\n```js\r\nvar post = new Post({\r\n  key: 'myUniqueKey'\r\n});\r\n\r\npost.delete().then(function () {\r\n  // delete successful\r\n});\r\n```\r\n\r\n<!--/docume:src/index.js-->\r\n\r\n# Testing\r\n\r\nTests are written with [mocha](http://mochajs.org/), and can be run via npm:\r\n\r\n```\r\n$ npm test\r\n```\r\n\r\n# License\r\n\r\nMIT Â© [Fahad Ibnay Heylaal](http://fahad19.com)\r\n","google":"UA-47493443-2","note":"Don't delete this file! It's used internally to help with page regeneration."}